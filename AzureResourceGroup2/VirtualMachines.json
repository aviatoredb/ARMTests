{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineBaseName": {
      "type": "string",
      "metadata": {
        "description": "Azure VM base name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkSubnetResourceId": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    }

    //"virtualMachines_edbARMTest1_id": {
    //  "defaultValue": "/subscriptions/3acf32ba-61c3-41ca-ab8d-17b8985c84e6/resourceGroups/VMTest/providers/Microsoft.Compute/disks/edbARMTest1_OsDisk_1_92685ce0f5664c0bb1967d6a52e589db",
    //  "type": "String"
    //},
    //"virtualMachines_edbARMTest2_id": {
    //  "defaultValue": "/subscriptions/3acf32ba-61c3-41ca-ab8d-17b8985c84e6/resourceGroups/VMTest/providers/Microsoft.Compute/disks/edbARMTest2_OsDisk_1_f1bf5162d49944a984014846af215c24",
    //  "type": "String"
    //},
    //"loadBalancers_edbARMLoadBalancer_id": {
    //  "defaultValue": "/subscriptions/3acf32ba-61c3-41ca-ab8d-17b8985c84e6/resourceGroups/VMTest/providers/Microsoft.Network/loadBalancers/edbARMLoadBalancer/frontendIPConfigurations/LoadBalancerFrontEnd",
    //  "type": "String"
    //},
    //"loadBalancers_edbARMLoadBalancer_id_1": {
    //  "defaultValue": "/subscriptions/3acf32ba-61c3-41ca-ab8d-17b8985c84e6/resourceGroups/VMTest/providers/Microsoft.Network/loadBalancers/edbARMLoadBalancer/backendAddressPools/edbARMTestPool",
    //  "type": "String"
    //},
    //"loadBalancers_edbARMLoadBalancer_id_2": {
    //  "defaultValue": "/subscriptions/3acf32ba-61c3-41ca-ab8d-17b8985c84e6/resourceGroups/VMTest/providers/Microsoft.Network/loadBalancers/edbARMLoadBalancer/probes/edbARMHealthProbe",
    //  "type": "String"
    //}
  },
  "variables": {
    //"virtualNetworksVNet_name": "[concat(parameters('virtualMachineBaseName'), 'VNet')]",
    "virtualMachines1_name": "[concat(parameters('virtualMachineBaseName'), 'Test1')]",
    "networkInterfaces1_name": "[concat(parameters('virtualMachineBaseName'), 'test1473')]",
    "publicIPAddresses1_ip_name": "[concat(parameters('virtualMachineBaseName'), 'Test1-ip')]",
    "networkSecurityGroups1_nsg_name": "[concat(parameters('virtualMachineBaseName'), 'Test1-nsg')]",
    "virtualMachines2_name": "[concat(parameters('virtualMachineBaseName'), 'Test2')]",
    "networkInterfaces2_name": "[concat(parameters('virtualMachineBaseName'), 'test2488')]",
    "publicIPAddresses2_ip_name": "[concat(parameters('virtualMachineBaseName'), 'Test2-ip')]",
    "networkSecurityGroups2_nsg_name": "[concat(parameters('virtualMachineBaseName'), 'Test2-nsg')]",
    "vaults_VMVault_name": "[concat(parameters('virtualMachineBaseName'), 'VMVault')]",
    "loadBalancers_LoadBalancer_name": "[concat(parameters('virtualMachineBaseName'), 'LoadBalancer')]",
    "availabilitySets_AvailabilitySet_name": "[concat(parameters('virtualMachineBaseName'), 'AvailabilitySet')]",

    "subnets_default_name": "default",
    "securityRules_RDP_name": "RDP",
    "securityRules_RDP_name_1": "RDP",
    "backupPolicies_WeeklyPolicy_name": "WeeklyPolicy",
    "backupPolicies_DefaultPolicy_name": "DefaultPolicy",
    "backupPolicies_HourlyLogBackup_name": "HourlyLogBackup",
    "replicationAlertSettings_defaultAlertSetting_name": "defaultAlertSetting"
  },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "sku": {
                "name": "Aligned"
            },
            "name": "[variables('availabilitySets_AvailabilitySet_name')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2,
                "virtualMachines": [
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines1_name'))]"
                    },
                    {
                        "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines2_name'))]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines1_name'))]",
                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachines2_name'))]"
            ]
        },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('virtualMachines1_name')]",
        "apiVersion": "2017-12-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets_AvailabilitySet_name'))]"
          },
          "hardwareProfile": {
            "vmSize": "Standard_B2s"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Windows",
              "name": "[concat(variables('virtualMachines1_name'),'_OsDisk_1_92685ce0f5664c0bb1967d6a52e589db')]",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "diskSizeGB": 127
            },
            "dataDisks": []
          },
          "osProfile": {
            "computerName": "[variables('virtualMachines1_name')]",
            "adminUsername": "aviator",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            },
            "secrets": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces1_name'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "https://edbarmstorage.blob.core.windows.net/"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets_AvailabilitySet_name'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces1_name'))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('virtualMachines2_name')]",
        "apiVersion": "2017-12-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets_AvailabilitySet_name'))]"
          },
          "hardwareProfile": {
            "vmSize": "Standard_B2s"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Windows",
              "name": "[concat(variables('virtualMachines2_name'),'_OsDisk_1_f1bf5162d49944a984014846af215c24')]",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "diskSizeGB": 127
            },
            "dataDisks": []
          },
          "osProfile": {
            "computerName": "[variables('virtualMachines2_name')]",
            "adminUsername": "aviator",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            },
            "secrets": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces2_name'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/')]"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySets_AvailabilitySet_name'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces2_name'))]"
        ]
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "name": "[variables('loadBalancers_LoadBalancer_name')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "1b6216a8-482b-4989-8ebf-ebac1e13f8cd",
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "etag": "W/\"73dac39f-1e3e-48a8-90e6-5258fb6e451d\"",
              "properties": {
                "provisioningState": "Succeeded",
                "privateIPAddress": "172.31.30.6",
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  //"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksVNet_name'), variables('subnets_default_name'))]",
                  "id": "[parameters('virtualNetworkSubnetResourceId')]"

                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "edbARMTestPool",
              "etag": "W/\"73dac39f-1e3e-48a8-90e6-5258fb6e451d\"",
              "properties": {
                "provisioningState": "Succeeded"
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "[variables('loadBalancers_LoadBalancer_name')]",
              "etag": "W/\"73dac39f-1e3e-48a8-90e6-5258fb6e451d\"",
              "properties": {
                "provisioningState": "Succeeded",
                //"frontendIPConfiguration": {
                //    "id": "[parameters('loadBalancers_edbARMLoadBalancer_id')]"
                //},
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "loadDistribution": "Default"
                //"backendAddressPool": {
                //    "id": "[parameters('loadBalancers_edbARMLoadBalancer_id_1')]"
                //},
                //"probe": {
                //    "id": "[parameters('loadBalancers_edbARMLoadBalancer_id_2')]"
                //}
              }
            }
          ],
          "probes": [
            {
              "name": "edbARMHealthProbe",
              "etag": "W/\"73dac39f-1e3e-48a8-90e6-5258fb6e451d\"",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 10,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatRules": [],
          "inboundNatPools": []
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('networkInterfaces1_name')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "de372476-b392-492e-b266-1226933ef2ae",
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "etag": "W/\"7f2708d7-5a42-442a-9ffe-a8b44141cdfc\"",
              "properties": {
                "provisioningState": "Succeeded",
                "privateIPAddress": "172.31.30.4",
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses1_ip_name'))]"
                },
                "subnet": {
                  //"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksVNet_name'), variables('subnets_default_name'))]",
                  "id": "[parameters('virtualNetworkSubnetResourceId')]"
                },
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [],
            "appliedDnsServers": [],
            "internalDomainNameSuffix": "jrnkrgp0g2bu3ntmoj13acsxhc.bx.internal.cloudapp.net"
          },
          "macAddress": "00-0D-3A-1D-F1-7D",
          "enableAcceleratedNetworking": false,
          "enableIPForwarding": false,
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups1_nsg_name'))]"
          },
          "primary": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses1_ip_name'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups1_nsg_name'))]"
        ]
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('networkInterfaces2_name')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "9375591b-90eb-4c68-ae1d-af2e5717d5c5",
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "etag": "W/\"7cf8d90c-efa9-4866-bc73-a5a66bd97b55\"",
              "properties": {
                "provisioningState": "Succeeded",
                "privateIPAddress": "172.31.30.5",
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses2_ip_name'))]"
                },
                "subnet": {
                  //"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworksVNet_name'), variables('subnets_default_name'))]",
                  "id": "[parameters('virtualNetworkSubnetResourceId')]"
                },
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [],
            "appliedDnsServers": [],
            "internalDomainNameSuffix": "jrnkrgp0g2bu3ntmoj13acsxhc.bx.internal.cloudapp.net"
          },
          "macAddress": "00-0D-3A-4E-8E-72",
          "enableAcceleratedNetworking": false,
          "enableIPForwarding": false,
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups2_nsg_name'))]"
          },
          "primary": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses2_ip_name'))]",
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups2_nsg_name'))]"
        ]
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroups1_nsg_name')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "bee9db55-bde2-416d-9950-80efb30db9b4",
          "securityRules": [
            {
              "name": "RDP",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            }
          ],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "DenyAllInBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowVnetOutBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowInternetOutBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "DenyAllOutBound",
              "etag": "W/\"89a9bc80-dfac-4a43-bd32-bb48d38a7c1f\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            }
          ]
        },
        "dependsOn": []
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroups2_nsg_name')]",
        "apiVersion": "2018-02-01",
        "location": "[parameters('location')]",
        "tags": {},
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "278303a1-45a7-46ca-a394-8752e5e58125",
          "securityRules": [
            {
              "name": "RDP",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            }
          ],
          "defaultSecurityRules": [
            {
              "name": "AllowVnetInBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowAzureLoadBalancerInBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow inbound traffic from azure load balancer",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 65001,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "DenyAllInBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all inbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowVnetOutBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 65000,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "AllowInternetOutBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Allow outbound traffic from all VMs to Internet",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 65001,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            },
            {
              "name": "DenyAllOutBound",
              "etag": "W/\"529e4854-9ef3-44df-be0b-e3d5458dd1db\"",
              "properties": {
                "provisioningState": "Succeeded",
                "description": "Deny all outbound traffic",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 65500,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              }
            }
          ]
        },
        "dependsOn": []
      },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('publicIPAddresses1_ip_name')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "014b53d0-b1e8-4637-8b46-26daf7da3e10",
                "ipAddress": "23.96.24.219",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "name": "[variables('publicIPAddresses2_ip_name')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "8f75038f-f902-4467-810b-bd5ce1a268f4",
                "ipAddress": "23.96.115.141",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            },
            "dependsOn": []
        },     
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "name": "[variables('vaults_VMVault_name')]",
            "apiVersion": "2018-01-10",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(variables('networkSecurityGroups1_nsg_name'), '/', variables('securityRules_RDP_name'))]",
            "apiVersion": "2018-02-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups1_nsg_name'))]"
            ]
        },
      {
        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
        "name": "[concat(variables('networkSecurityGroups2_nsg_name'), '/', variables('securityRules_RDP_name_1'))]",
        "apiVersion": "2018-02-01",
        "scale": null,
        "properties": {
          "provisioningState": "Succeeded",
          "protocol": "TCP",
          "sourcePortRange": "*",
          "destinationPortRange": "3389",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 300,
          "direction": "Inbound",
          "sourcePortRanges": [],
          "destinationPortRanges": [],
          "sourceAddressPrefixes": [],
          "destinationAddressPrefixes": []
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups2_nsg_name'))]"
        ]
      },
      {
        "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
        "name": "[concat(variables('vaults_VMVault_name'), '/', variables('backupPolicies_HourlyLogBackup_name'))]",
        "apiVersion": "2016-12-01",
        "scale": null,
        "properties": {
          "backupManagementType": "AzureWorkload",
          "protectedItemsCount": 0
        },
        "dependsOn": [
          "[resourceId('Microsoft.RecoveryServices/vaults', variables('vaults_VMVault_name'))]"
        ]
      },
      {
        "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
        "name": "[concat(variables('vaults_VMVault_name'), '/', variables('backupPolicies_DefaultPolicy_name'))]",
        "apiVersion": "2016-12-01",
        "scale": null,
        "properties": {
          "backupManagementType": "AzureIaasVM",
          "protectedItemsCount": 0
        },
        "dependsOn": [
          "[resourceId('Microsoft.RecoveryServices/vaults', variables('vaults_VMVault_name'))]"
        ]
      },
      {
        "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
        "name": "[concat(variables('vaults_VMVault_name'), '/', variables('backupPolicies_WeeklyPolicy_name'))]",
        "apiVersion": "2016-12-01",
        "scale": null,
        "properties": {
          "backupManagementType": "AzureIaasVM",
          "protectedItemsCount": 0
        },
        "dependsOn": [
          "[resourceId('Microsoft.RecoveryServices/vaults', variables('vaults_VMVault_name'))]"
        ]
      },
      {
        "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
        "name": "[concat(variables('vaults_VMVault_name'), '/', variables('replicationAlertSettings_defaultAlertSetting_name'))]",
        "apiVersion": "2018-01-10",
        "scale": null,
        "properties": {
          "sendToOwners": "DoNotSend",
          "customEmailAddresses": [],
          "locale": ""
        },
        "dependsOn": [
          "[resourceId('Microsoft.RecoveryServices/vaults', variables('vaults_VMVault_name'))]"
        ]
      }
    ],
  "outputs": {
  }
}
